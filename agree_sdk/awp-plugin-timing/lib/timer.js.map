{"version":3,"sources":["awp-plugin-timing/lib/timer.js"],"names":["Timer","_interval","_isTimerStop","_isTimerLoop","_tick","console","log","timer","setInterval","tickEvent","interval","setTimeout","clearInterval","clearTimeout","seconds","func","isLoop"],"mappings":";;;;;;;;;;;;;;;;IASqBA,K;;;SAEnBC,S,GAAY,I;SAEZC,Y,GAAe,K;SACfC,Y,GAAe,I;;;;;gCAiCH;AACV,UAAI,OAAQ,KAAKC,KAAb,IAAuB,UAA3B,EAAuC;AACrCC,gBAAQC,GAAR,WAAoB,KAAKF,KAAzB;AACA;AACD;AACD,UAAI,CAAC,KAAKF,YAAV,EAAwB;AACtB,aAAKE,KAAL;AACD;AACF;;;4BAEO;AAAA;;AACN,WAAKF,YAAL,GAAoB,KAApB;AACA,UAAI,KAAKC,YAAT,EAAuB;AACrB,aAAKI,KAAL,GAAaC,YAAY,YAAM;AAC7B,gBAAKC,SAAL;AACD,SAFY,EAEV,KAAKC,QAFK,CAAb;AAGD,OAJD,MAIO;AACL,aAAKH,KAAL,GAAaI,WAAW,YAAM;AAC5B,gBAAKF,SAAL;AACD,SAFY,EAEV,KAAKC,QAFK,CAAb;AAGD;AACF;;;2BAEM;AACL,WAAKR,YAAL,GAAoB,IAApB;;AAEA,UAAI,KAAKC,YAAT,EAAuB;AACrBS,sBAAc,KAAKL,KAAnB;AACD,OAFD,MAEO;AACLM,qBAAa,KAAKN,KAAlB;AACD;AACF;;;wBA3Dc;AACb,aAAO,KAAKN,SAAZ;AACD,K;sBACYa,O,EAAS;AACpB,WAAKb,SAAL,GAAiBa,OAAjB;AACD;;;wBAGU;AACT,aAAO,KAAKV,KAAL,EAAP;AACD,K;sBACQW,I,EAAM;AACb,WAAKX,KAAL,GAAaW,IAAb;AACD;;;wBAGiB;AAChB,aAAO,KAAKZ,YAAZ;AACD,K;sBACea,M,EAAQ;AACtB,WAAKb,YAAL,GAAoBa,MAApB;AACD;;;wBAGiB;AAChB,aAAO,KAAKd,YAAZ;AACD;;;;;kBApCkBF,K;AAsEpB","file":"timer.js","sourcesContent":["/**\r\n * 时间定时器\r\n * @author mayuxian\r\n * @desc 时间定时器\r\n * @param {function} tick - 定时触发事件\r\n * @param {int} interval -事件间隔 - 事件\r\n * @param {boolean} _isTimerStop -定时器是否停止\r\n * @param {boolean} _isTimerLoop -定时器是否循环,默认循环\r\n */\r\nexport default class Timer {\r\n\r\n  _interval = 1000; //时间间隔，默认1s\r\n  _tick; //定时器触发事件\r\n  _isTimerStop = false;//定时器是否停止事件\r\n  _isTimerLoop = true;\r\n\r\n  timer;\r\n\r\n  ///时间间隔(单位毫秒ms)，默认1s\r\n  get interval() {\r\n    return this._interval;\r\n  }\r\n  set interval(seconds) {\r\n    this._interval = seconds;\r\n  }\r\n\r\n  ///时间定时器定时执行函数\r\n  get tick() {\r\n    return this._tick();\r\n  }\r\n  set tick(func) {\r\n    this._tick = func;\r\n  }\r\n\r\n  ///定时器是否循环\r\n  get isTimerLoop() {\r\n    return this._isTimerLoop;\r\n  }\r\n  set isTimerLoop(isLoop) {\r\n    this._isTimerLoop = isLoop;\r\n  }\r\n\r\n  ///获取定时器是否停止状态\r\n  get isTimerStop() {\r\n    return this._isTimerStop;\r\n  }\r\n\r\n  tickEvent() {\r\n    if (typeof (this._tick) != \"function\") {\r\n      console.log(`tick:${this._tick},tick is not function.`);\r\n      return;\r\n    }\r\n    if (!this._isTimerStop) {\r\n      this._tick();\r\n    }\r\n  }\r\n\r\n  start() {\r\n    this._isTimerStop = false;\r\n    if (this._isTimerLoop) {\r\n      this.timer = setInterval(() => {\r\n        this.tickEvent();\r\n      }, this.interval);\r\n    } else {\r\n      this.timer = setTimeout(() => {\r\n        this.tickEvent();\r\n      }, this.interval);\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    this._isTimerStop = true;\r\n\r\n    if (this._isTimerLoop) {\r\n      clearInterval(this.timer);\r\n    } else {\r\n      clearTimeout(this.timer);\r\n    }\r\n  }\r\n};\r\n"]}