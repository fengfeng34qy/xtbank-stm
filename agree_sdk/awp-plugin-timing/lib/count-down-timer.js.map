{"version":3,"sources":["awp-plugin-timing/lib/count-down-timer.js"],"names":["CountDownTimerStatus","started","stopped","paused","CountDownTimeoutMode","alawaysCountDown","resetOnInput","mainTimerInterval","checkInputTimerInterval","CountDownTimer","_remainingSeconds","_timeoutSeconds","_timerStatus","_timeoutMode","mainTimer","isTimerLoop","interval","tick","mainTimerEvent","checkInputTimer","checkInputTimerEvent","seconds","stop","timeoutSeconds","remainingSeconds","start","timeoutMode","onTimeout","countDownTimeout","checkUserInputAsync","isReset","reset","mode"],"mappings":"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","file":"count-down-timer.js","sourcesContent":["/**\r\n * 操作时间定时器\r\n * @author mayuxian\r\n * @desc 主要在交易页面根据用户是否操作的状态进行倒计时的处理。\r\n * @desc CountDownTimerStatus 倒计时状态，CountDownTimeoutMode倒计时模式，CountDownTimer倒计时类\r\n * @param {double} remainingSeconds -页面倒计时剩余秒数\r\n * @param {double} timeoutSeconds - 页面设置的超时时间\r\n * @param {CountDownTimeoutMode} timeoutMode - 倒计时模式\r\n * @param {CountDownTimerStatus} timerStatus - 倒计时状态\r\n */\r\n\r\n// import EventManager from './event';  //尝试查找系统Event  //不需要event了\r\nimport { InteractionChecker } from 'awp-plugin-interaction-checker';\r\nimport Timer from './timer';\r\n\r\n/**\r\n * 操作时间定时器的状态\r\n * @desc 标记操作时间总计时器当前的操作状态\r\n */\r\nlet CountDownTimerStatus = {\r\n  //启动\r\n  started: 0,\r\n  //停止\r\n  stopped: 1,\r\n  //暂停\r\n  paused: 2\r\n};\r\n\r\n/**\r\n * 操作时间定时器的超时模式\r\n * @desc 指定操作超时是总是倒计时或输入则重置倒计时\r\n */\r\nlet CountDownTimeoutMode = {\r\n  //总是倒计时\r\n  alawaysCountDown: 0,\r\n  //输入操作重置倒计时\r\n  resetOnInput: 1\r\n};\r\n\r\nconst mainTimerInterval = 1000; //主要定时器时间间隔\r\nconst checkInputTimerInterval = 1000; //检查用户输入定时器间隔\r\n\r\n/*倒计时类\r\n */\r\nclass CountDownTimer {\r\n\r\n  _remainingSeconds = 0;\r\n  _timeoutSeconds = 0;\r\n  _timerStatus = CountDownTimerStatus.paused; //操作定时状态\r\n  _timeoutMode = CountDownTimeoutMode.alawaysCountDown; // 操作超时模式\r\n\r\n  mainTimer;\r\n  checkInputTimer;\r\n\r\n  onTimeout;//超时触发器\r\n  constructor() {\r\n    this.mainTimer = new Timer();\r\n    this.mainTimer.isTimerLoop = false;\r\n    this.mainTimer.interval = mainTimerInterval;\r\n    this.mainTimer.tick = () => {\r\n      this.mainTimerEvent();\r\n    };\r\n\r\n    this.checkInputTimer = new Timer();\r\n    this.checkInputTimer.isTimerLoop = false;\r\n    this.checkInputTimer.interval = checkInputTimerInterval;\r\n    this.checkInputTimer.tick = () => {\r\n      this.checkInputTimerEvent();\r\n    };\r\n\r\n    // EventManager.on('onTimeout', () => {\r\n    //   if (this.onTimeout && typeof (this.onTimeout) == \"function\") {\r\n    //     this.onTimeout();\r\n    //   }\r\n    // });\r\n  }\r\n  //超时剩余时间\r\n  get remainingSeconds() {\r\n    return this._remainingSeconds;\r\n  }\r\n  set remainingSeconds(seconds) {\r\n    this._remainingSeconds = seconds;\r\n  }\r\n\r\n  //超时时间\r\n  get timeoutSeconds() {\r\n    return this._timeoutSeconds;\r\n  }\r\n  set timeoutSeconds(seconds) {\r\n    this._timeoutSeconds = seconds;\r\n  }\r\n\r\n  //定时器状态\r\n  get timerStatus() {\r\n    return this._timerStatus;\r\n  }\r\n\r\n  //超时模式\r\n  get timeoutMode() {\r\n    return this._timeoutMode;\r\n  }\r\n  set timeoutMode(mode) {\r\n    this._timeoutMode = mode;\r\n  }\r\n\r\n  /*--------设置操作时间超时------[公有方法]----------------*/\r\n  setTimeout(seconds) {\r\n    this.stop();\r\n    this.timeoutSeconds = seconds;\r\n    this.remainingSeconds = seconds;\r\n  }\r\n\r\n  //启动操作\r\n  start() {\r\n    // console.log(`CountDownTimer start: ${this.timeoutSeconds}s`);\r\n    this.remainingSeconds = this.timeoutSeconds;\r\n    this.mainTimer.start();\r\n    if (this.timeoutMode == CountDownTimeoutMode.resetOnInput) {\r\n      this.checkInputTimer.start(); //若是输入即重置则需要启动检查定时器\r\n    }\r\n    this._timerStatus = CountDownTimerStatus.started;\r\n  }\r\n\r\n  //停止操作\r\n  stop() {\r\n    this.mainTimer.stop();\r\n    this.checkInputTimer.stop();\r\n\r\n    this.remainingSeconds = 0;\r\n    this._timerStatus = CountDownTimerStatus.stopped;\r\n  }\r\n\r\n  //暂停操作\r\n  pause() {\r\n    if (this._timerStatus == CountDownTimerStatus.started) {\r\n      this.mainTimer.stop();\r\n      this.checkInputTimer.stop();\r\n\r\n      this._timerStatus = CountDownTimerStatus.paused;\r\n    }\r\n  }\r\n\r\n  //恢复倒计时\r\n  resume() {\r\n    if (this._timerStatus != CountDownTimerStatus.paused) {\r\n      return;\r\n    }\r\n    this.mainTimer.start();\r\n    if (this.timeoutMode == CountDownTimeoutMode.resetOnInput) {\r\n      this.checkInputTimer.start();\r\n    }\r\n    this._timerStatus = CountDownTimerStatus.started;\r\n  }\r\n\r\n  //重置倒计时\r\n  reset() {\r\n    if (this._timerStatus == CountDownTimerStatus.stopped) {\r\n      return;\r\n    }\r\n    this.stop();\r\n    this.start();\r\n  }\r\n  /*-----------------------------------------------*/\r\n\r\n  /*----倒计时定时器触发事件------[私有方法]----------*/\r\n\r\n  countDownTimeout() {\r\n    if (this.onTimeout && typeof (this.onTimeout) == \"function\") {\r\n      this.onTimeout();\r\n    }\r\n  }\r\n  mainTimerEvent() {\r\n    this.remainingSeconds--;\r\n    // console.log(`timer id:${this.mainTimer.timer}`);\r\n    if (this.remainingSeconds <= 0) {\r\n      this.stop();\r\n      this._timerStatus = CountDownTimerStatus.stopped;\r\n      this.countDownTimeout();\r\n      // EventManager.emit('onTimeout');\r\n    } else {\r\n      this.mainTimer.start();\r\n    }\r\n  }\r\n\r\n  //检查用户输入定时器触发事件\r\n  checkInputTimerEvent() {\r\n    InteractionChecker.checkUserInputAsync(checkInputTimerInterval, (isReset) => {\r\n      if (isReset) {\r\n        // console.log('CountDownTimer Reset');\r\n        this.reset();\r\n      }\r\n      this.checkInputTimer.start();\r\n    });\r\n  }\r\n  /*-----------------------------------------------*/\r\n}\r\n\r\nexport {\r\n  CountDownTimer,\r\n  CountDownTimerStatus,\r\n  CountDownTimeoutMode\r\n};\r\n"]}