{"version":3,"sources":["awp-lib-audio-player/lib/audio.js"],"names":["currentPlayed","lastRunTime","Date","now","getAudio","name","target","document","querySelector","install","audios","frag","createDocumentFragment","forEach","value","index","array","audio","createElement","src","path","setAttribute","appendChild","body","play","currentTime","protectTime","Error","pause","isEnded","ended","setPlaybackRate","rate","playbackRate"],"mappings":";;;;;;AAIA,IAAIA,sBAAJ;AACA,IAAIC,cAAcC,KAAKC,GAAL,EAAlB;;kBAEe;AACbC,UADa,oBACJC,IADI,EACE;AACb,QAAIC,SAASC,SAASC,aAAT,iBAAqCH,IAArC,OAAb;AACA,WAAOC,MAAP;AACD,GAJY;AA4BbG,SA5Ba,mBA4BLC,MA5BK,EA4BG;AACd,QAAMC,OAAOJ,SAASK,sBAAT,EAAb;AACAF,WAAOG,OAAP,CAAe,UAACC,KAAD,EAAQC,KAAR,EAAeC,KAAf,EAAyB;AACtC,UAAMC,QAAQV,SAASW,aAAT,CAAuB,OAAvB,CAAd;AACAD,YAAME,GAAN,GAAYL,MAAMM,IAAlB;AACAH,YAAMI,YAAN,WAA2BP,MAAMT,IAAjC,EAAyCS,MAAMT,IAA/C;AACAM,WAAKW,WAAL,CAAiBL,KAAjB;AACD,KALD;AAMAV,aAASgB,IAAT,CAAcD,WAAd,CAA0BX,IAA1B;AACD,GArCY;AA8Cba,MA9Ca,gBA8CRnB,IA9CQ,EA8CF;AACT,QAAIoB,cAAcvB,KAAKC,GAAL,EAAlB;AACA,QAAIuB,cAAc,GAAlB;AACA,QAAKD,cAAcxB,WAAf,GAA8ByB,WAAlC,EAA+C;AAC7C;AACD;AACD,QAAI,CAACrB,IAAD,IAAS,OAAOA,IAAP,KAAgB,QAA7B,EAAuC;AACrC,YAAMsB,MAAM,OAAN,CAAN;AACD;AACD,QAAMrB,SAAS,KAAKF,QAAL,CAAcC,IAAd,CAAf;AACA,QAAI,CAACC,MAAL,EAAa;AACX,YAAMqB,MAAM,QAAN,CAAN;AACD;AACD,QAAI,CAAC3B,aAAL,EAAoB;AAClBA,sBAAgBM,MAAhB;AACAN,oBAAcwB,IAAd;AACD,KAHD,MAGO;AACLxB,oBAAc4B,KAAd;AACA5B,oBAAcyB,WAAd,GAA4B,CAA5B;;AAEAzB,sBAAgBM,MAAhB;AACAN,oBAAcwB,IAAd;AAED;AACDvB,kBAAcC,KAAKC,GAAL,EAAd;AACD,GAvEY;AA+EbyB,OA/Ea,mBA+EL;AACN5B,kBAAc4B,KAAd;AACD,GAjFY;AA2FbC,SA3Fa,qBA2FH;AACR,QAAI,CAAC7B,aAAL,EAAoB;AAClB,YAAM2B,MAAM,WAAN,CAAN;AACD;AACD,WAAO3B,cAAc8B,KAArB;AACD,GAhGY;AA0GbC,iBA1Ga,2BA0GG1B,IA1GH,EA0GS2B,IA1GT,EA0Ge;AAC1B,QAAI3B,QAAQ2B,IAAR,IAAgB,OAAO3B,IAAP,KAAgB,QAAhC,IAA4C,OAAO2B,IAAP,KAAgB,QAAhE,EAA0E;AACxE,UAAM1B,SAAS,KAAKF,QAAL,CAAcC,IAAd,CAAf;AACAC,aAAO2B,YAAP,GAAsBD,IAAtB;AACD,KAHD,MAGO;AACL,YAAML,MAAM,OAAN,CAAN;AACD;AACF;AAjHY,C","file":"audio.js","sourcesContent":["/**\n * @module 【lib】AudioPlayer\n * @desc 音频播放（不支持mp3,支持ogg,wav等）\n */\nlet currentPlayed;\nvar lastRunTime = Date.now();\n\nexport default {\n  getAudio(name) {\n    let target = document.querySelector(`audio[data-${name}]`);\n    return target;\n  },\n  /**\n   * @func install\n   * @desc 初始化安装音频文件\n   * @param {Object[]} audios - 音频文件信息\n   * @param {String} audios.name - 音频名称\n   * @param {String} audios.path - 音频路径\n   * @example import { AudioPlayer } from 'awp-lib-audio-player'\n   *\n   * audios 也可以通过json配置文件导入;\n   *\n   * AudioPlayer.install(\n   *  [\n   *    {\n   *      \"path\": \"/static/test.ogg\",\n   *      \"name\": \"test\"\n   *    },\n   *   {\n   *     \"path\": \"/static/test2.ogg\",\n   *     \"name\": \"test2\"\n   *    }\n   *  ]\n   * )\n   */\n  install(audios) {\n    const frag = document.createDocumentFragment();\n    audios.forEach((value, index, array) => {\n      const audio = document.createElement('audio');\n      audio.src = value.path;\n      audio.setAttribute(`data-${value.name}`, value.name);\n      frag.appendChild(audio);\n    });\n    document.body.appendChild(frag);\n  },\n  /**\n   * @func play\n   * @desc 播放音频\n   * @param {String} name - 音频名称\n   * @example import { AudioPlayer } from 'awp-lib-audio-player';\n   *\n   * AudioPlayer.play(name);\n   */\n  play(name) {\n    var currentTime = Date.now();\n    var protectTime = 100; //设置保护性延时 单位毫秒，不要小于50 建议100以上\n    if ((currentTime - lastRunTime) < protectTime) {\n      return;\n    }\n    if (!name || typeof name !== \"string\") {\n      throw Error('参数有错误');\n    }\n    const target = this.getAudio(name);\n    if (!target) {\n      throw Error('没有找到资源');\n    }\n    if (!currentPlayed) {\n      currentPlayed = target;\n      currentPlayed.play();\n    } else {\n      currentPlayed.pause();\n      currentPlayed.currentTime = 0;\n      //console.log(currentPlayed.paused, '上一段播放状态 true是暂停')\n      currentPlayed = target;\n      currentPlayed.play();\n      //console.log(currentPlayed.currentSrc, \"当前播放\")\n    }\n    lastRunTime = Date.now();\n  },\n  /**\n   * @func pause\n   * @desc 暂停音频\n   * @example import { AudioPlayer } from 'awp-lib-audio-player';\n   *\n   * AudioPlayer.pause();\n   */\n  pause() {\n    currentPlayed.pause();\n  },\n  /**\n   * @func isEnded\n   * @desc 获取音频是否播放完\n   * @param {String} name - 音频名称\n   * @returns {Boolean} bool值\n   * @example import { AudioPlayer } from 'awp-lib-audio-player';\n   *\n   * AudioPlayer.isEnded();\n   */\n  isEnded() {\n    if (!currentPlayed) {\n      throw Error('并没有音频正在播放');\n    }\n    return currentPlayed.ended;\n  },\n  /**\n   * @func setPlaybackRate\n   * @desc 设置播放速率\n   * @param {String} name - 音频名称\n   * @param {Number} rate - 播放比率\n   * @example import { AudioPlayer } from 'awp-lib-audio-player';\n   *\n   * AudioPlayer.setPlaybackRate(name，rate);\n   */\n  setPlaybackRate(name, rate) {\n    if (name && rate && typeof name === \"string\" && typeof rate === \"number\") {\n      const target = this.getAudio(name);\n      target.playbackRate = rate;\n    } else {\n      throw Error('参数有错误');\n    }\n  }\n};\n"]}