"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var _vue=require("vue"),_vue2=_interopRequireDefault(_vue),_rules=require("./rules"),_rules2=_interopRequireDefault(_rules),_utils=require("../common/utils"),_utils2=_interopRequireDefault(_utils);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function validate(e,t,r,i,s){var u=this,n=this.$validation.errors,a="required";if(n[t]||_vue2.default.set(n,t,[]),_utils2.default.isArray(e))return e.indexOf(a)>-1||r?-1===e.map(function(e,i){return validate.call(u,e,t,r,!0,i)}).indexOf(!1):(n[t]&&n[t].length>0&&(n[t]=[]),!0);if(!i&&e!==a&&e.test!==a&&!r)return n[t]&&n[t].length>0&&(n[t]=[]),!0;var l=_utils2.default.isString(e)?_rules2.default[e]:_utils2.default.isString(e.test)?_rules2.default[e.test]:e;if(l&&l.test){l.errorMsg=e.errorMsg||l.errorMsg;var o=_utils2.default.isFunction(l.test)?l.test.call(this,r):l.test.test(r);if(void 0===o){var f="[validator] custom rule must return error message or boolean value: "+JSON.stringify(e);throw new Error(f)}if(_utils2.default.isString(o)&&(l.errorMsg=o,o=!1),i){var d=n[t],v=d.findIndex(function(e){return e.index===s});if(o)v>-1&&d.splice(v,1);else if(v<0){var c=d.findIndex(function(e){return s<e.index});c<0&&(c=d.length),d.splice(c,0,{index:s,errorMsg:l.errorMsg})}}else{var _=n[t];!o&&_.length<=0&&_.push({index:s,errorMsg:l.errorMsg}),o&&_.length>0&&(n[t]=[])}return o}console.warn("[validator] rule does not exist: "+(e.test||e))}function setValidators(e){var t=this;Object.keys(e).forEach(function(r){t.$watch(r,function(i){return validate.call(t,e[r],r,i)})})}function parsePath(e){var t=e.split(".");return function(e){for(var r=0;r<t.length;r++){if(!e)return;e=e[t[r]]}return e}}exports.default={created:function(){var e=this.$options.validators;e&&(_vue2.default.util.defineReactive(this,"$validation",{errors:{}}),setValidators.call(this,e))},methods:{$validate:function(e){var t=this,r=this.$options.validators;return-1===(e=e||Object.keys(r)).map(function(e){return validate.call(t,r[e],e,parsePath(e)(t))}).indexOf(!1)},$clearValidation:function(){this.$validation.errors={}}}};