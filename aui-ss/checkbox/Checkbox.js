"";Object.defineProperty(exports,"__esModule",{value:!0});var _common=require("../common");exports.default={render:function anonymous(){with(this)return _c("label",{staticClass:"aui-checkbox"},[_c("span",{staticClass:"aui-checkbox__input",class:{"is-disabled":disabled,"is-checked":isChecked,"is-indeterminate":indeterminate,"is-focus":isFocus}},[_c("span",{staticClass:"aui-checkbox__inner"}),_v(" "),trueLabel||falseLabel?_c("input",{directives:[{name:"model",rawName:"v-model",value:model,expression:"model"}],staticClass:"aui-checkbox__original",attrs:{type:"checkbox",name:name,disabled:disabled,"true-value":trueLabel,"false-value":falseLabel},domProps:{checked:Array.isArray(model)?_i(model,null)>-1:_q(model,trueLabel)},on:{change:handleChange,__c:function(e){var i=model,t=e.target.checked?trueLabel:falseLabel;if(Array.isArray(i)){var o=_i(i,null);t?o<0&&(model=i.concat(null)):o>-1&&(model=i.slice(0,o).concat(i.slice(o+1)))}else model=t}}}):_c("input",{directives:[{name:"model",rawName:"v-model",value:model,expression:"model"}],staticClass:"aui-checkbox__original",attrs:{type:"checkbox",disabled:disabled,name:name},domProps:{value:label,checked:Array.isArray(model)?_i(model,label)>-1:model},on:{change:handleChange,__c:function(e){var i=model,t=!!e.target.checked;if(Array.isArray(i)){var o=label,a=_i(i,o);t?a<0&&(model=i.concat(o)):a>-1&&(model=i.slice(0,a).concat(i.slice(a+1)))}else model=t}}})]),_v(" "),$slots.default||label?_c("span",{staticClass:"aui-checkbox__label"},[_t("default"),_v(" "),$slots.default?_e():_c("span",[_v(_s(label))])],2):_e()])},name:"aui-checkbox",mixins:[_common.Emitter],data:function(){return{selfModel:!1,isFocus:!1}},computed:{model:{get:function(){return this.isGroup?this.store:void 0!==this.value?this.value:this.selfModel},set:function(e){if(this.isGroup){var i=!1;void 0!==this._checkboxGroup.min&&e.length<this._checkboxGroup.min&&(i=!0),void 0!==this._checkboxGroup.max&&e.length>this._checkboxGroup.max&&(i=!0),!1===i&&this.$dispatch("aui-checkbox-group","input",[e])}else void 0!==this.value?this.$emit("input",e):this.selfModel=e}},isChecked:function(){return"[object Boolean]"==={}.toString.call(this.model)?this.model:Array.isArray(this.model)?this.model.indexOf(this.label)>-1:null!==this.model&&void 0!==this.model?this.model===this.trueLabel:void 0},isGroup:function(){for(var e=this.$parent;e;){if("aui-checkbox-group"===e.$options.name)return this._checkboxGroup=e,!0;e=e.$parent}return!1},store:function(){return this._checkboxGroup?this._checkboxGroup.value:this.value}},props:{value:{},label:{},indeterminate:Boolean,disabled:Boolean,checked:Boolean,name:String,trueLabel:[String,Number],falseLabel:[String,Number]},methods:{focus:function(){this.isFocus=!0,this.$el.firstElementChild.querySelector("input").focus()},blur:function(){this.isFocus=!1,this.$el.firstElementChild.querySelector("input").blur()},addToStore:function(){Array.isArray(this.model)&&-1===this.model.indexOf(this.label)?this.model.push(this.label):this.model=this.trueLabel||!0},handleChange:function(e){var i=this;this.$emit("change",e),this.isGroup&&this.$nextTick(function(e){i.$dispatch("aui-checkbox-group","change",[i._checkboxGroup.value])})}},created:function(){this.checked&&this.addToStore()}};